// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 19.1 (Build Build 670 09/22/2019)
// Created on Tue Jan 12 12:11:00 2021

memory_manager memory_manager_inst
(
	.data(data_sig) ,	// inout [DATA_WIDTH-1:0] data_sig
	.address(address_sig) ,	// input [ADDR_SPACE-1:0] address_sig
	.wren_in(wren_in_sig) ,	// input  wren_in_sig
	.clk(clk_sig) ,	// input  clk_sig
	.core_data(core_data_sig) ,	// inout [CORE_WIDTH-1:0] core_data_sig
	.core_address(core_address_sig) ,	// output [CORE_WIDTH-1:0] core_address_sig
	.wren_out(wren_out_sig) ,	// output  wren_out_sig
	.reg_en(reg_en_sig) ,	// output [NUM_REGS-1:0] reg_en_sig
	.core_en(core_en_sig) 	// output [NUM_CORES-1:0] core_en_sig
);

defparam memory_manager_inst.CORE_WIDTH = 16;
defparam memory_manager_inst.DATA_WIDTH = 8;
defparam memory_manager_inst.ADDR_SPACE = 23;
defparam memory_manager_inst.NUM_CORES = 64;
defparam memory_manager_inst.NUM_REGS = 8;
defparam memory_manager_inst.REGS_CODIND = 3;
defparam memory_manager_inst.CORE_CODIND = 6;
