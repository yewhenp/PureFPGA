// double values in memory starting from RAM[RAM[10]] to RAM[RAM[10]+10*core_number]
// each core will double 10 values

// Let's say that address for functions for ith core lays in RAM[i]
// Here linux part should insert 3 in RAM[0:4]
coreidx reg0
load reg1 reg0
jmp reg1

// reg2 = 10 reg3 = 2 reg5 = 12 - start of cycle - constants
movl reg2 10
movl reg3 2
movl reg5 12//

// So, the first address of each core = RAM[10] + coreidx*10
// get address of first cell to reg1
movl reg0 10
load reg1 reg0

// save address of first cell of this core to reg0
coreidx reg0
mul reg0 reg2
add reg0 reg1

// reg1 = i = 0;
movl reg1 0

// RAM[reg0] *= 2
load reg4 reg0
mul reg4 reg3
store reg4 reg0

// reg0++ i++
inc reg0
inc reg1

// if reg0 < 10 jump to start of cycle
cmp reg0 reg2
jlt reg5

// send interrupt, finished work
int 1